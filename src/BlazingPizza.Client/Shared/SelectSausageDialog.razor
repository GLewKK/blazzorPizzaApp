@using BlazingPizza.Shared.CoreItems
@inject HttpClient HttpClient



    <div class="dialog-container">
        <div class="dialog">
            <div class="dialog-title">
                <h3> <span class="iconify" data-icon="oi-list-rich" data-inline="true"></span> Please Select Dough </h3>
            </div>
            <h1> @SausageCount.Count of @((int)TopicsSize.SausageSize)</h1>

            <div class="d-inline-block centered">
                @foreach (var decorator in decorators)
                {
                    <button class="btn btn-primary plusminusbtn" onclick="@(() => OnApplyDecorator.InvokeAsync(decorator))"> @(decorator is AddSausage ? "+" : "-")</button>
                }
            </div>
                <div class="dialog-body">
                    <h3>Please Select Sausage </h3>
                    @foreach (var sausageFactory in factoryList)
                    {
                        var sausage = sausageFactory.GetSausage();

                        <a onclick="@(() => InvokeOnConfirm(sausage))" class="image-container  @(ActiveSausage != null && ActiveSausage.GetType().Equals(sausage.GetType()) ? "activeToppig" : string.Empty) " style="background-image: url('@sausage.ImgSrc')"></a>
                        <h1>@sausage.Name</h1>
                    }
                </div>
                <div class="dialog-buttons">
                    <button class="centered btn btn-success" onclick="@OnConfirm">Apply</button>
                </div>
            </div>
    </div>



@functions {

    [Parameter] List<SausageFactory> factoryList { get; set; }
    [Parameter] List<SausageDecorator> decorators { get; set; }
    [Parameter] EventCallback OnCancel { get; set; }
    [Parameter] EventCallback OnConfirm { get; set; }
    [Parameter] EventCallback<SausageDecorator> OnApplyDecorator { get; set; }
    [Parameter] EventCallback<Sausage> OnSelectSausage { get; set; }

    void InvokeOnConfirm(Sausage sausage)
    {
        ActiveSausage = sausage;
        OnSelectSausage.InvokeAsync(sausage);
    }

    public int Count { get; set; } = 0;
    public Sausage ActiveSausage { get; set; } = null;
}
